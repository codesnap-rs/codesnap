name: Release CodeSnap to crates.io 

on:
  push:
    paths:
      - core/Cargo.toml
      - lib/Cargo.toml
    branches:
      - main 

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Read version from core project 
        id: read_toml
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: core/Cargo.toml
          field: package.version

      - uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }} 

      - name: Publish library to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --manifest-path core/Cargo.toml

      - name: Publish cli to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --manifest-path cli/Cargo.toml

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.read_toml.outputs.value }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          generateReleaseNotes: true

      - name: Return the version
        run: echo "tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"
 
  
  upload-assets:
    needs: release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest

          - target: aarch64-apple-darwin
            os: macos-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Build and upload binaries
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: codesnap
          target: ${{ matrix.target }}
          tar: unix
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }} 
          ref: ${{ needs.secret-generator.outputs.tag }}
    
